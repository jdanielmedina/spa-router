{"version":3,"sources":["spa-router.js"],"names":["factory","define","require","exports","module","onchange","onChangeEvent","listeners","Listener","i","l","length","findNode","tree","path","onlyFind","params","parts","split","target","found","parent","len","realCurrentValue","matcher","k","replace","$1","$2","$3","j","_children","value","extendNode","RNode","children","createRouteTree","root","routes","isFunction","callbacks","isArray","hasOwn","call","fns","slice","dfs","ci","ri","newParams","p","RegExp","matches","match","apply","searchRouteTree","Win","window","toString","Object","prototype","decodeC","decodeURIComponent","encodeC","encodeURIComponent","hasOwnProperty","obj","extend","srcList","arguments","src","q","addEvent","name","handler","addEventListener","attachEvent","queryHelper","parse","queryString","queryParts","query","key","val","undefined","push","stringify","keys","sort","len1","_parts","len2","join","TypeError","this","before","after","_parent","nprtt","concat","historySupport","history","init","mode","add","fn","setHashHistory","pushState","document","title","location","hash","currentHash","idf","indexOf","test","defaults","notFound","always","on","recurse","Router","routeTree","options","configure","rprtt","self","url","newURL","pathname","search","substr","dispatch","charAt","mount","route","handlers","n","uri","queryIndex","hashIndex","req","result","setRoute","loc","oldURI","newURI","redirect","once","off","splice","reload"],"mappings":"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","file":"spa-router.min.js","sourcesContent":["\r\n/// 浏览器兼容性：\r\n/// onhashchange: [IE 8.0]\r\n/// history.pushState: [IE 10.0]\r\n\r\n(function(factory) {\r\n  // CMD wrapper\r\n  define(function(require, exports, module) {\r\n    factory(exports);\r\n  });\r\n}(function(exports) {\r\n\n\r\nvar Win = window,\r\n  toString = Object.prototype.toString,\r\n  decodeC = Win.decodeURIComponent,\r\n  encodeC = Win.encodeURIComponent;\r\n/**\r\n * Shorthand: hasOwn\r\n * stand for hasOwnProperty\r\n */\r\nvar hasOwn = Object.prototype.hasOwnProperty,\r\n\r\n  /**\r\n   * Utils: isArray\r\n   * @param {Obejct} obj\r\n   * @return {Boolean}\r\n   */\r\n  isArray = function(obj) {\r\n    return toString.call(obj) === \"[object Array]\";\r\n  },\r\n\r\n  /**\r\n   * Utils: isFunction\r\n   * @param {Object} obj\r\n   * @return {Boolean}\r\n   */\r\n  isFunction = function(obj) {\r\n    return toString.call(obj) === \"[object Function]\";\r\n  },\r\n\r\n  /**\r\n   * Utils: extend\r\n   * @param {Object,...} src list\r\n   * @return {Object} a new object\r\n   */\r\n  extend = function() {\r\n    var obj = {};\r\n    var srcList = [].slice.call(arguments, 0);\r\n    for (var i = 0, len = srcList.length; i < len; ++i) {\r\n      var src = srcList[i];\r\n      for (var q in src) {\r\n        if (hasOwn.call(src, q)) {\r\n          obj[q] = src[q];\r\n        }\r\n      }\r\n    }\r\n    return obj;\r\n  },\r\n\r\n  addEvent = function(name, handler) {\r\n    if (Win.addEventListener) {\r\n      Win.addEventListener(name, handler, false);\r\n    } else if (Win.attachEvent) {\r\n      Win.attachEvent('on' + name, handler);\r\n    } else {\r\n      Win['on' + name] = handler;\r\n    }\r\n  };\r\n\r\nvar queryHelper = {\r\n  /**\r\n   * parse query string\r\n   * @param {String} queryString\r\n   * @erturn {Object} query object\r\n   */\r\n  parse: function(queryString) {\r\n    if (typeof queryString !== 'string') {\r\n      return {};\r\n    }\r\n\r\n    queryString = queryString.replace(/^\\s*|\\s*$/g, '').replace(/^(\\?|#)/, '');\r\n\r\n    if (!queryString) {\r\n      return {};\r\n    }\r\n\r\n    var queryParts = queryString.split('&');\r\n\r\n    var query = {};\r\n\r\n    for (var i = 0, len = queryParts.length; i < len; ++i) {\r\n      var parts = queryParts[i].replace(/\\+/g, ' ').split('='); // 特殊字符`+`转换为空格\r\n      var key = parts[0];\r\n      var val = parts[1];\r\n\r\n      key = decodeC(key);\r\n\r\n      val = val === undefined ? null : decodeC(val);\r\n\r\n      if (!hasOwn.call(query, key)) {\r\n        query[key] = val;\r\n      } else if (isArray(query[key])) {\r\n        query[key].push(val);\r\n      } else {\r\n        query[key] = [query[key], val];\r\n      }\r\n    }\r\n\r\n    return query;\r\n\r\n  },\r\n\r\n  /**\r\n   * stringify query object\r\n   * @param {Object} obj\r\n   * @return {String} query string\r\n   */\r\n  stringify: function(obj) {\r\n    if (!obj) {\r\n      return '';\r\n    }\r\n    var keys = [];\r\n    for (var p in obj) {\r\n      if (hasOwn.call(obj, p)) {\r\n        keys.push(p);\r\n      }\r\n    }\r\n\r\n    keys.sort();\r\n\r\n    var parts = [];\r\n    for (var i = 0, len1 = keys.length; i < len1; ++i) {\r\n      var key = keys[i];\r\n      var val = obj[key];\r\n\r\n      if (isArray(val)) {\r\n        val.sort();\r\n        var _parts = [];\r\n        for (var j = 0, len2 = val.length; j < len2; ++j) {\r\n          _parts.push(encodeC(key) + '=' + encodeC(val[j]));\r\n        }\r\n        parts.push(_parts.join('&'));\r\n        continue;\r\n      }\r\n      parts.push(encodeC(key) + '=' + encodeC(val));\r\n    }\r\n    return parts.join('&');\r\n  }\r\n\r\n};\r\n\n\r\n/**\r\n * RNode\r\n * @constructor\r\n * @param {String} value 必须\r\n *\r\n * value:     区分同级节点的唯一标识\r\n * params:    value包含的参数，使用{参数名:参数规则}键值对表示\r\n * before:    路由匹配时，url改变之前执行的回调函数或队列\r\n * callbacks: 路由匹配时执行的回调函数或队列\r\n * after:     路由匹配时，url改变之后，callbacks执行完再执行的回调函数或队列\r\n *\r\n * _children: 子节点引用列表\r\n * _parent:   父节点引用\r\n */\r\nvar RNode = function(value) {\r\n  if (typeof value === 'undefined') throw new TypeError('The RNode Constructor Need A Value.');\r\n  this.value = value;\r\n  this.params = {};\r\n  this.callbacks = null;\r\n  this.before = null;\r\n  this.after = null;\r\n  this._children = [];\r\n  this._parent = null;\r\n};\r\n\r\nvar nprtt = RNode.prototype;\r\n\r\n/**\r\n * set/get children\r\n * @param {RNode|[RNode]} children **optional**\r\n * @return {[RNode]|RNode} return children node list or this\r\n */\r\nnprtt.children = function(children) {\r\n  if (typeof children === 'undefined') {\r\n    return this._children;\r\n  }\r\n  if (children instanceof RNode) {\r\n    this._children.push(children);\r\n  } else if (isArray(children)) {\r\n    this._children = this.children.concat(children);\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * set/get parent\r\n * @param {RNode} parent **optional**\r\n * @return {RNode} return parent node or this\r\n */\r\nnprtt.parent = function(parent) {\r\n  if (typeof parent === 'undefined') {\r\n    return this._parent;\r\n  }\r\n  if (parent instanceof RNode) {\r\n    this._parent = parent;\r\n  }\r\n  return this;\r\n};\r\n\n\r\nvar historySupport = typeof Win.history !== 'undefined';\r\n\r\n/// Listener\r\nvar Listener = {\r\n\r\n  listeners: null,\r\n\r\n  history: false,\r\n\r\n  init: function(mode) {\r\n    this.history = mode === 'history';\r\n    if (this.history && historySupport) { // IE 10+\r\n      addEvent('popstate', onchange);\r\n    } else {\r\n      addEvent('hashchange', onchange);\r\n    }\r\n    return this;\r\n  },\r\n\r\n  add: function (fn) {\r\n\r\n    if (!this.listeners) {\r\n      this.listeners = [];\r\n    }\r\n\r\n    this.listeners.push(fn);\r\n\r\n    return this;\r\n  },\r\n\r\n  setHashHistory: function (path) {\r\n    if (this.history) {\r\n      history.pushState({}, document.title, path);\r\n    } else {\r\n      if (path[0] === '/') {\r\n        Win.location.hash = path;\r\n      } else {\r\n        var currentHash = Win.location.hash;\r\n        var idf = currentHash.indexOf('?');\r\n        if (idf !== -1) {\r\n          currentHash = currentHash.slice(0, idf);\r\n        }\r\n        if (/.*\\/$/.test(currentHash)) {\r\n          Win.location.hash = currentHash + path;\r\n        } else {\r\n          var hash = currentHash.replace(/([^\\/]+|)$/, function($1) {\r\n            return $1 === '' ? '/' + path : path;\r\n          });\r\n          Win.location.hash = hash;\r\n        }\r\n      }\r\n    }\r\n    return this;\r\n  }\r\n\r\n};\r\n\r\nfunction onchange(onChangeEvent) {\r\n  var listeners = Listener.listeners;\r\n  for (var i = 0, l = listeners.length; i < l; i++) {\r\n    listeners[i](onChangeEvent);\r\n  }\r\n}\r\n\n\r\nvar defaults = {\r\n  // mode可以是history|hashbang|default\r\n  // mode:history     使用HTML5 History API\r\n  // mode:hashbang    使用hash（hashbang模式）\r\n  // mode:[default]   使用hash（非hashbang模式）\r\n  mode: 'default',\r\n  notFound: false,\r\n  always: false,\r\n  on: false,\r\n  before: false,\r\n  after: false,\r\n  recurse: false // 参考director\r\n};\r\n\r\n/**\r\n * Router (routes)\r\n * @constructor\r\n * @param {Object} routes **Optional**\r\n */\r\nvar Router = exports.Router = function(routes) {\r\n  routes = routes || {};\r\n  if (!(this instanceof Router)) return new Router(routes);\r\n  var root = new RNode(''); // 根路径的value指定为空字符串\r\n  root.params = false;\r\n  this.routeTree = createRouteTree(root, routes);\r\n  this.options = {};\r\n  this.configure(defaults);\r\n};\r\n\r\nvar rprtt = Router.prototype;\r\n\r\n/**\r\n * @param {Object} options **Optional**\r\n * @return this\r\n */\r\nrprtt.configure = function(options) {\r\n  options = options || {};\r\n  this.options = extend(this.options, options);\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param {Object} options\r\n * @return this\r\n */\r\nrprtt.init = function(options) {\r\n  options = options || {};\r\n  var self = this;\r\n\r\n  // 初始化配置\r\n  this.configure(options);\r\n\r\n  this.handler = function(onChangeEvent) {\r\n    var newURL = onChangeEvent && onChangeEvent.newURL || window.location.hash; // 兼容hashchange事件中调用和第一次调用\r\n    var url;\r\n    switch(self.options.mode) {\r\n      case 'history':\r\n        url = window.location.pathname + window.location.search + window.location.hash;\r\n        if (url.substr(0, 1) !== '/') {\r\n          url = '/' + url;\r\n        }\r\n        break;\r\n      case 'hashbang':\r\n        url = newURL.replace(/.*#!/, '');\r\n        break;\r\n      default:\r\n        url = newURL.replace(/.*#/, '');\r\n    }\r\n    self.dispatch(url.charAt(0) === '/' ? url : '/' + url);\r\n  };\r\n  Listener.init(this.options.mode).add(this.handler);\r\n\r\n  // 首次触发\r\n  this.handler();\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * 将路由挂载到某个节点上\r\n * e.g. router.mount('/user', {'/list': function() {}});\r\n * @param {String} path\r\n * @param {Object} routes\r\n * @return this\r\n * */\r\nrprtt.mount = function(path, routes) {\r\n  if (path !== '' && path[0] === '/') {\r\n    path = path.slice(1);\r\n  }\r\n  createRouteTree(findNode(this.routeTree, path), routes);\r\n  return this;\r\n};\r\n\r\n/**\r\n * .on()\r\n *\r\n * @param {String|RegExp} path\r\n * @param {Function|Array} handlers\r\n * @return this\r\n */\r\nrprtt.on = rprtt.route = function(path, handlers) {\r\n  if (path !== '' && path[0] === '/') {\r\n    path = path.slice(1);\r\n  }\r\n  var n = findNode(this.routeTree, path);\r\n  n.callbacks = n.callbacks || [];\r\n  if (isArray(handlers)) {\r\n    n.callbacks = n.callbacks.concat(handlers);\r\n  } else if (isFunction(handlers)) {\r\n    n.callbacks.push(handlers);\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * 根据给定的path，查找路由树，返回path对应的节点。如果节点不存在就创建新的节点\r\n * 匹配参数（参数名由字母、数字、下划线组成，不能以数字开头。后面带括号的是特定参数的匹配规则。）\r\n * @param {RNode} tree\r\n * @param {String} path\r\n * @param {Boolean} onlyFind 只找节点，当节点不存在时不要创建新节点\r\n * @return {RNode}\r\n * */\r\nfunction findNode(tree, path, onlyFind) {\r\n  onlyFind = !!onlyFind;\r\n  var parts = path.split('/');\r\n  var target = null, found = false;\r\n  var parent = tree;\r\n  var params;\r\n  for (var i = 0, len = parts.length; i < len; ++i) {\r\n    params = false;\r\n    var realCurrentValue = parts[i];\r\n\r\n    var matcher = /:([a-zA-Z_][a-zA-Z0-9_]*)(\\([^\\)]+\\))?/g;\r\n\r\n    var k = 0;\r\n\r\n    /* jshint ignore:start */\r\n    realCurrentValue = realCurrentValue.replace(matcher, function($1, $2, $3) {\r\n      params = params || [];\r\n      params[k++] = $2;\r\n      if (typeof $3 === 'undefined') {\r\n        return '([a-zA-Z0-9_]+)';\r\n      } else {\r\n        return $3;\r\n      }\r\n    });\r\n    /* jshint ignore:end */\r\n\r\n    for (var j = 0; j < parent._children.length; ++j ) {\r\n      if (parent._children[j].value === realCurrentValue) {\r\n        target = parent._children[j];\r\n        found = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!found) { // 不存在，创建新节点\r\n      if (onlyFind) return false;\r\n      var extendNode = new RNode(realCurrentValue);\r\n      parent.children(extendNode);\r\n      extendNode.parent(parent);\r\n      extendNode.params = params;\r\n      target = extendNode;\r\n    }\r\n    parent = target;\r\n    found = false;\r\n  }\r\n  return target;\r\n}\r\n\r\n/**\r\n * 构造路由树/子树\r\n * @param {RNode} root 当前根节点\r\n * @param {Object} routes 当前节点的路由表\r\n * @return {RNode} 返回根节点\r\n * */\r\nfunction createRouteTree(root, routes) {\r\n\r\n  if (isFunction(routes)) {\r\n    root.callbacks = [routes];\r\n    return root;\r\n  } else if (isArray(routes)) {\r\n    root.callbacks = routes;\r\n    return root;\r\n  }\r\n\r\n  for (var path in routes) {\r\n    if (hasOwn.call(routes, path)) {\r\n\r\n      var fns = routes[path];\r\n\r\n      if (path === '/') {\r\n        createRouteTree(root, fns);\r\n      } else {\r\n        if (path !== '' && path[0] === '/') {\r\n          path = path.slice(1);\r\n        }\r\n        createRouteTree(findNode(root, path), fns);\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  return root;\r\n}\r\n\r\n/**\r\n * @param {RNode} root 当前节点\r\n * @param {Array} parts 路径分段数组\r\n * @param {Integer} ci 当前路径分段索引\r\n * @param {Integer} ri 当前节点所在兄弟节点列表的位置\r\n * @params {Object} params 记录参数的对象\r\n * @return {[RNode, Object]} 同时返回节点和参数\r\n */\r\nfunction dfs(root, parts, ci, ri, params) {\r\n\r\n  var value = parts[ci];\r\n\r\n  var newParams = {};\r\n  for (var p in params) { // copy: params => newParams\r\n    if (hasOwn.call(params, p)) {\r\n      newParams[p] = params[p];\r\n    }\r\n  }\r\n\r\n  var parent = root.parent();\r\n\r\n  if (parent === null && ri > 0) { // finally not matched\r\n    return [false, newParams];\r\n  }\r\n\r\n  if (parent !== null && ri > parent._children.length-1) { // not matched, go back\r\n    return [false, newParams];\r\n  }\r\n\r\n  if (ci > parts.length-1 || ci < 0) return [false, newParams];\r\n\r\n  var matcher = new RegExp('^' + root.value + '$');\r\n  var matches = value.match(matcher);\r\n\r\n  if (matches === null) return [false, newParams]; // not matched, go back\r\n\r\n  if (!!root.params) {\r\n    matches = [].slice.apply(matches, [1]);\r\n    for (var k = 0; k < matches.length; ++k) {\r\n      newParams[root.params[k]] = matches[k];\r\n    }\r\n  }\r\n\r\n  if (ci === parts.length-1 && root.callbacks !== null) { // finally matched\r\n    return [root, newParams];\r\n  }\r\n\r\n  for (var i = 0; i < root._children.length; ++i) {\r\n    var found = dfs(root._children[i], parts, ci+1, i, newParams); // matched, go ahead\r\n    if (!found[0]) continue;\r\n    return found;\r\n  }\r\n\r\n  return dfs(root, parts, ci, ri+1, params); // not matched, go back\r\n\r\n}\r\n\r\n/**\r\n * 搜索路由树，看是否存在匹配的路径，如果存在，返回相应的回调函数\r\n * @todo 只返回第一个匹配到的路由（如果存在多个匹配？）\r\n * @param {RNode} tree 树根\r\n * @param {String} path 要匹配的路径\r\n * 返回值包含两个，用数组表示[callbacks, params]\r\n * @return {Function|Array|null} 如果存在就返回相应的回调，否则返回null\r\n * @return {[Array, Object]} 同时返回回调和参数\r\n *\r\n * */\r\nfunction searchRouteTree(tree, path) {\r\n\r\n  var found = dfs(tree, path.split('/'), 0, 0, {});\r\n\r\n  if (!found[0]) {\r\n    return [null, {}];\r\n  }\r\n\r\n  return [found[0].callbacks, found[1]];\r\n\r\n}\r\n\r\n/**\r\n * dispatch\r\n * 根据给定的路径，遍历路由树，只要找到一个匹配的就把路由返回\r\n * @param {String} path\r\n * @return this\r\n */\r\nrprtt.dispatch = function(path) {\r\n\r\n  var routeTree = this.routeTree;\r\n  // 保存原始请求uri\r\n  var uri = path;\r\n  // 取出query部分\r\n  var queryIndex = path.indexOf('?');\r\n  var hashIndex = path.indexOf('#');\r\n  hashIndex = hashIndex === -1 ? path.length : hashIndex;\r\n  var queryString = queryIndex === -1 ? '' : path.slice(queryIndex+1, hashIndex);\r\n  path = queryIndex === -1 ? path : path.slice(0, queryIndex);\r\n  var req = {uri: uri, path: path, query: queryHelper.parse(queryString)};\r\n\r\n  if (path === '/') {\r\n    path = '';\r\n  }\r\n  var result = searchRouteTree(routeTree, path);\r\n  var callbacks = result[0];\r\n  req.params = result[1];\r\n  if (callbacks !== null) {\r\n    if (isArray(callbacks)) {\r\n      for (var i = 0, len = callbacks.length; i < len; ++i) { // 不考虑异步操作\r\n        callbacks[i].call(this, req);\r\n      }\r\n    } else {\r\n      throw new TypeError('callbacks must be an array type');\r\n    }\r\n  } else if (this.options.notFound) {\r\n    this.options.notFound(req);\r\n  }\r\n\r\n  return this;\r\n\r\n};\r\n\r\n/**\r\n * 这个方法会改变当前的`url`，从而触发路由（和dispatch类似，但是dispatch不会改动`url`）\r\n * 这个方法对于hash/hashbang模式没有多大用处，用户可以通过点击<a>标签实现`url`改变而不跳转页面，但是在history模式下，用户无法通过标签改变`url`而不跳转页面\r\n * 改方法相当于调用一次history.pushState()然后再调用.dispatch()\r\n * 如果url没有改变，则不\"刷新\"\r\n *\r\n * @param {String} path\r\n * @return this\r\n */\r\nrprtt.setRoute = function(path) {\r\n  var loc = window.location;\r\n  var oldURI = loc.pathname + loc.search;\r\n  Listener.setHashHistory(path);\r\n  var newURI = loc.pathname + loc.search;\r\n  if (this.options.mode === 'history' && oldURI !== newURI) {\r\n    this.dispatch(newURI);\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * alias: `setRoute`\r\n */\r\nrprtt.redirect = rprtt.setRoute;\r\n\r\n/**\r\n * TODO: once\r\n * 和.on()方法类似，但只会触发一次\r\n * @param {String|RegExp} path\r\n * @param {Function|Array} handlers\r\n * @return this\r\n */\r\nrprtt.once = function(path, handlers) {\r\n  return this;\r\n};\r\n\r\n/**\r\n * .off()方法表示不再侦听某个路由，直接将该路由节点的所有callbacks移除\r\n * @return this\r\n */\r\nrprtt.off = function(path) {\r\n  if (path !== '' && path[0] === '/') {\r\n    path = path.slice(1);\r\n  }\r\n  var n = findNode(this.routeTree, path);\r\n  if (n !== null && n.callbacks !== null) {\r\n    n.callbacks.splice(0, n.callbacks.length);\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * reload page: redispatch current path\r\n * @return this\r\n */\r\nrprtt.reload = function() {\r\n  var loc = window.location;\r\n  if (this.options.mode === 'history') {\r\n    this.dispatch(loc.pathname + loc.search + loc.hash);\r\n  } else {\r\n    this.dispatch(loc.hash.slice(1));\r\n  }\r\n  return this;\r\n};\r\n\n\r\n}));\r\n"],"sourceRoot":"/source/"}