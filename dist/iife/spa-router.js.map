{"version":3,"file":"spa-router.js","sources":["../../es2015/utils.js","../../es2015/rnode.js","../../es2015/listener.js","../../es2015/querystring.js","../../es2015/tree.js","../../es2015/main.js"],"sourcesContent":["export function extend() {\n  var obj = {};\n  var srcList = Array.prototype.slice.call(arguments, 0);\n  for (var i = 0, len = srcList.length; i < len; ++i) {\n    var src = srcList[i];\n    for (var q in src) {\n      if (src.hasOwnProperty(q)) {\n        obj[q] = src[q];\n      }\n    }\n  }\n  return obj;\n}\n\nexport function addEvent(name, handler) {\n  if (window.addEventListener) {\n    window.addEventListener(name, handler, false);\n  } else if (window.attachEvent) {\n    window.attachEvent('on' + name, handler);\n  } else {\n    window['on' + name] = handler;\n  }\n}\n","/**\n * RNode\n * @constructor\n * @param {String} value 必须\n *\n * value:     区分同级节点的唯一标识\n * params:    value包含的参数，使用{参数名:参数规则}键值对表示\n * before:    路由匹配时，url改变之前执行的回调函数或队列\n * callbacks: 路由匹配时执行的回调函数或队列\n * after:     路由匹配时，url改变之后，callbacks执行完再执行的回调函数或队列\n *\n * _children: 子节点引用列表\n * _parent:   父节点引用\n */\n\nexport default class RNode {\n  constructor(value) {\n    var valueType = typeof value;\n    if (valueType !== 'string') {\n      throw new TypeError(`Expected a string in the first argument, got ${ valueType }`);\n    }\n    this.value = value;\n    this.params = {};\n    this.callbacks = null;\n    this.before = null;\n    this.after = null;\n    this._children = [];\n    this._parent = null;\n  }\n\n  /**\n   * set/get children\n   * @param {RNode|[RNode]} children **optional**\n   * @return {[RNode]|RNode} return children node list or this\n   */\n  children(children) {\n    if (undefined === children) {\n      return this._children;\n    }\n    if (children instanceof RNode) {\n      this._children.push(children);\n    } else if (isArray(children)) {\n      this._children = this._children.concat(children);\n    } else {\n      throw new TypeError(`Expected RNode or Array in the first argument, got ${ Object.prototype.toString.call(children) }`);\n    }\n    return this;\n  }\n\n  /**\n   * set/get parent\n   * @param {RNode} parent **optional**\n   * @return {RNode} return parent node or this\n   */\n  parent(parent) {\n    if (undefined === parent) {\n      return this._parent;\n    }\n    if (parent instanceof RNode) {\n      this._parent = parent;\n    } else {\n      throw new TypeError(`Expected RNode in the first argument, got ${ Object.prototype.toString.call(parent) }`);\n    }\n    return this;\n  }\n}\n","import { extend, addEvent } from './utils';\n\nvar historySupport = typeof window.history['pushState'] !== \"undefined\";\n\n/// Listener\nvar Listener = {\n  listeners: null,\n\n  history: false,\n\n  init: function(mode) {\n    this.history = mode === 'history';\n    if (this.history && historySupport) { // IE 10+\n      utils.addEvent('popstate', onchange);\n    } else {\n      utils.addEvent('hashchange', onchange);\n    }\n    return this;\n  },\n\n  add: function (fn) {\n    if (!this.listeners) {\n      this.listeners = [];\n    }\n    this.listeners.push(fn);\n    return this;\n  },\n\n  setHashHistory: function (path) {\n    if (this.history) {\n      history.pushState({}, document.title, path);\n    } else {\n      if (path[0] === '/') {\n        location.hash = '!' + path;\n      } else {\n        var currentURL = location.hash.slice(2); // 去掉前面的#!\n        var idf = currentURL.indexOf('?');\n        if (idf !== -1) {\n          currentURL = currentURL.slice(0, idf);\n        }\n        if (/.*\\/$/.test(currentURL)) {\n          location.hash = '!' + currentURL + path;\n        } else {\n          var hash = currentURL.replace(/([^\\/]+|)$/, function($1) {\n            return $1 === '' ? '/' + path : path;\n          });\n          location.hash = '!' + hash;\n        }\n      }\n    }\n    return this;\n  }\n};\n\nfunction onchange(onChangeEvent) {\n  var listeners = Listener.listeners;\n  for (var i = 0, l = listeners.length; i < l; i++) {\n    listeners[i](onChangeEvent);\n  }\n}\n\nexport default Listener;\n","export default {\n  /**\n   * querystring.stringify\n   * @param { Object } obj\n   * @param { Boolean } traditional [default:false]\n   * @return { String }\n   *\n   * traditional is true:  {x: [1, 2]} => 'x=1&x=2'\n   * traditional is false: {x: [1, 2]} => 'x[]=1&x[]=2'\n   */\n  stringify: function(obj, traditional) {\n    if (!obj) {\n      return '';\n    }\n    var appendString = traditional ? '' : '[]';\n    var names = Object.keys(obj).sort();\n\n    var parts = [];\n    for (var i = 0; i < names.length; ++i) {\n      var name = names[i];\n      var value = obj[name];\n\n      if (Array.isArray(value)) {\n        value.sort();\n        var _parts = [];\n        for (var j = 0; j < value.length; ++j) {\n          _parts.push(`${encodeURIComponent(name).replace(/%20/g, '+')}${appendString}=${encodeURIComponent(value[j]).replace(/%20/g, '+')}`);\n        }\n        parts.push(_parts.join('&'));\n        continue;\n      }\n      parts.push(`${encodeURIComponent(name).replace(/%20/g, '+')}=${encodeURIComponent(value).replace(/%20/g, '+')}`);\n    }\n    return parts.join('&');\n  },\n\n  /**\n   * querystring.parse\n   * @param { String } queryString\n   * @return { Object }\n   */\n  parse: function(queryString) {\n    if (typeof queryString !== 'string') {\n      return {};\n    }\n\n    queryString = queryString.trim().replace(/^(\\?|#)/, '');\n\n    if (queryString === '') {\n      return {};\n    }\n\n    var queryParts = queryString.split('&');\n\n    var query = {};\n\n    for (var i = 0; i < queryParts.length; ++i) {\n      var parts = queryParts[i].replace(/\\+/g, '%20').split('='); // 特殊字符`+`转换为空格\n      var name = parts[0];\n      var value = parts[1];\n\n      name = decodeURIComponent(name);\n\n      value = value === undefined ? null : decodeURIComponent(value);\n\n      if (query.hasOwnProperty(name)) {\n        query[name] = value;\n      } else if (Array.isArray(query[name])) {\n        query[name].push(value);\n      } else {\n        query[name] = [query[name], value];\n      }\n    }\n    return query;\n  }\n};\n","// TODO: root怎么处理？\nexport function handler(onChangeEvent) {\n  let mode = this.options.mode;\n  let url;\n  switch(mode) {\n    case 'history':\n      url = Loc.pathname + Loc.search + Loc.hash;\n      if (url.substr(0, 1) !== '/') {\n        url = '/' + url;\n      }\n      break;\n    case 'hashbang':\n    default:\n      var hash = Loc.hash.slice(1);\n      if (hash === '' || hash === '!') {\n        return this.redirect(this.options.root);\n      }\n      var newURL = onChangeEvent && onChangeEvent.newURL || Loc.hash;\n      url = newURL.replace(/.*#!/, '');\n  }\n  this.dispatch(url.charAt(0) === '/' ? url : '/' + url);\n};\n\n/**\n * 根据给定的path，查找路由树，返回path对应的节点。如果节点不存在就创建新的节点\n * 匹配参数（参数名由字母、数字、下划线组成，不能以数字开头。后面带括号的是特定参数的匹配规则。）\n * @param {RNode} tree\n * @param {String} path\n * @param {Boolean} onlyFind 只找节点，当节点不存在时不要创建新节点\n * @return {RNode}\n * */\nexport function findNode(tree, path, onlyFind) {\n  onlyFind = !!onlyFind;\n  var parts = path.split('/');\n  var target = null, found = false;\n  var parent = tree;\n  var params;\n  for (var i = 0, len = parts.length; i < len; ++i) {\n    params = false;\n    var realCurrentValue = parts[i];\n\n    var matcher = /:([a-zA-Z_][a-zA-Z0-9_]*)(\\([^\\)]+\\))?/g;\n\n    var k = 0;\n\n    /* jshint ignore:start */\n    realCurrentValue = realCurrentValue.replace(matcher, function($1, $2, $3) {\n      params = params || [];\n      params[k++] = $2;\n      if (typeof $3 === 'undefined') {\n        return '([a-zA-Z0-9_]+)';\n      } else {\n        return $3;\n      }\n    });\n    /* jshint ignore:end */\n\n    for (var j = 0; j < parent._children.length; ++j ) {\n      if (parent._children[j].value === realCurrentValue) {\n        target = parent._children[j];\n        found = true;\n        break;\n      }\n    }\n    if (!found) { // 不存在，创建新节点\n      if (onlyFind) return false;\n      var extendNode = new RNode(realCurrentValue);\n      parent.children(extendNode);\n      extendNode.parent(parent);\n      extendNode.params = params;\n      target = extendNode;\n    }\n    parent = target;\n    found = false;\n  }\n  return target;\n}\n\n/**\n * 构造路由树/子树\n * @param {RNode} root 当前根节点\n * @param {Object} routes 当前节点的路由表\n * @return {RNode} 返回根节点\n * */\nexport function createRouteTree(root, routes) {\n\n  if (isFunction(routes)) {\n    root.callbacks = [routes];\n    return root;\n  } else if (isArray(routes)) {\n    root.callbacks = routes;\n    return root;\n  }\n\n  for (var path in routes) {\n    if (hasOwn.call(routes, path)) {\n\n      var fns = routes[path];\n\n      if (path === '/') {\n        createRouteTree(root, fns);\n      } else {\n        if (path !== '' && path[0] === '/') {\n          path = path.slice(1);\n        }\n        createRouteTree(findNode(root, path), fns);\n      }\n\n    }\n  }\n\n  return root;\n}\n\n/**\n * @param {RNode} root 当前节点\n * @param {Array} parts 路径分段数组\n * @param {Integer} ci 当前路径分段索引\n * @param {Integer} ri 当前节点所在兄弟节点列表的位置\n * @params {Object} params 记录参数的对象\n * @return {[RNode, Object]} 同时返回节点和参数\n */\nexport function dfs(root, parts, ci, ri, params) {\n\n  var value = parts[ci];\n\n  var newParams = {};\n  for (var p in params) { // copy: params => newParams\n    if (hasOwn.call(params, p)) {\n      newParams[p] = params[p];\n    }\n  }\n\n  var parent = root.parent();\n\n  if (parent === null && ri > 0) { // finally not matched\n    return [false, newParams];\n  }\n\n  if (parent !== null && ri > parent._children.length-1) { // not matched, go back\n    return [false, newParams];\n  }\n\n  if (ci > parts.length-1 || ci < 0) return [false, newParams];\n\n  var matcher = new RegExp('^' + root.value + '$');\n  var matches = value.match(matcher);\n\n  if (matches === null) return [false, newParams]; // not matched, go back\n\n  if (!!root.params) {\n    matches = [].slice.apply(matches, [1]);\n    for (var k = 0; k < matches.length; ++k) {\n      newParams[root.params[k]] = matches[k];\n    }\n  }\n\n  if (ci === parts.length-1 && root.callbacks !== null) { // finally matched\n    return [root, newParams];\n  }\n\n  for (var i = 0; i < root._children.length; ++i) {\n    var found = dfs(root._children[i], parts, ci+1, i, newParams); // matched, go ahead\n    if (!found[0]) continue;\n    return found;\n  }\n\n  return dfs(root, parts, ci, ri+1, params); // not matched, go back\n}\n\n/**\n * 搜索路由树，看是否存在匹配的路径，如果存在，返回相应的回调函数\n * @todo 只返回第一个匹配到的路由（如果存在多个匹配？）\n * @param {RNode} tree 树根\n * @param {String} path 要匹配的路径\n * 返回值包含两个，用数组表示[callbacks, params]\n * @return {Function|Array|null} 如果存在就返回相应的回调，否则返回null\n * @return {[Array, Object]} 同时返回回调和参数\n *\n * */\nexport function searchRouteTree(tree, path) {\n\n  var found = dfs(tree, path.split('/'), 0, 0, {});\n\n  if (!found[0]) {\n    return [null, {}];\n  }\n\n  return [found[0].callbacks, found[1]];\n}\n","import { extend, addEvent } from './utils';\nimport RNode from './rnode';\nimport Listener from './listener';\nimport querystring from './querystring';\nimport { handler, findNode, createRouteTree, dfs, searchRouteTree } from './tree';\n\nconst optionDefaults = {\n  // mode可以是history|hashbang\n  // mode:history     使用HTML5 History API\n  // mode:hashbang    使用hash（hashbang模式）\n  root: '/', // TODO\n  mode: 'hashbang',\n  notFound: false,\n  recurse: false // TODO\n};\n\n/**\n * Router (routes)\n * @constructor\n * @param {Object} routes **Optional**\n */\n\nexport default class Router {\n  constructor(routes) {\n    routes = routes || {};\n    if (!(this instanceof Router)) {\n      throw new TypeError('Use \"new\" to create a Router instance');\n    }\n    var root = new RNode('');\n    root.params = false;\n    this.routeTree = createRouteTree(root, routes);\n    this.options = {};\n    this.configure(optionDefaults);\n  }\n\n  /**\n   * .configure()\n   * @method\n   * @param {Object} options **Optional**\n   * @return this\n   */\n  configure(options) {\n    options = options || {};\n    this.options = extend(this.options, options);\n    return this;\n  }\n\n  /**\n   * .start()\n   * @method\n   * @param {Object} options\n   * @return this\n   */\n  start(options) {\n    options = options || {};\n    var self = this;\n    // 初始化配置\n    this.configure(options);\n    Listener.init(this.options.mode).add(function() {\n      return handler.call(self);\n    });\n    // 首次触发\n    handler.call(this);\n    return this;\n  }\n\n  /**\n   * .mount() 将路由挂载到某个节点上\n   * @method\n   * @param {String} path\n   * @param {Object} routes\n   * @return this\n   */\n  mount() {\n    if (path !== '' && path[0] === '/') {\n      path = path.slice(1);\n    }\n    createRouteTree(findNode(this.routeTree, path), routes);\n    return this;\n  }\n\n  /**\n   * .on()\n   * @method\n   * @param {String|RegExp} path\n   * @param {Function|Array} handlers\n   * @return this\n   */\n  on() {\n    if (path !== '' && path[0] === '/') {\n      path = path.slice(1);\n    }\n    var n = findNode(this.routeTree, path);\n    n.callbacks = n.callbacks || [];\n    if (isArray(handlers)) {\n      n.callbacks = n.callbacks.concat(handlers);\n    } else if (isFunction(handlers)) {\n      n.callbacks.push(handlers);\n    }\n    return this;\n  }\n\n  /**\n   * .dispatch() 根据给定的路径，遍历路由树，只要找到一个匹配的就把路由返回\n   * @method\n   * @param {String} path\n   * @return this\n   */\n  dispatch() {\n    var routeTree = this.routeTree;\n    // 保存原始请求uri\n    var uri = path;\n    // 取出query部分\n    var queryIndex = path.indexOf('?');\n    var hashIndex = path.indexOf('#');\n    hashIndex = hashIndex === -1 ? path.length : hashIndex;\n    var queryString = queryIndex === -1 ? '' : path.slice(queryIndex+1, hashIndex);\n    path = queryIndex === -1 ? path : path.slice(0, queryIndex);\n    var req = {uri: uri, path: path, query: querystring.parse(queryString)};\n\n    if (path === '/') {\n      path = '';\n    }\n    var result = searchRouteTree(routeTree, path);\n    var callbacks = result[0];\n    req.params = result[1];\n    if (callbacks !== null) {\n      if (isArray(callbacks)) {\n        for (var i = 0, len = callbacks.length; i < len; ++i) { // 不考虑异步操作\n          callbacks[i].call(this, req);\n        }\n      } else {\n        throw new TypeError(`Expected Array, got ${ typeof callbacks }`);\n      }\n    } else if (this.options.notFound) {\n      this.options.notFound(req);\n    }\n    return this;\n  }\n\n  /**\n   * 这个方法会改变当前的`url`，从而触发路由（和dispatch类似，但是dispatch不会改动`url`）\n   * 这个方法对于hash/hashbang模式没有多大用处，用户可以通过点击<a>标签实现`url`改变而不跳转页面，但是在history模式下，用户无法通过标签改变`url`而不跳转页面\n   * 改方法相当于调用一次history.pushState()然后再调用.dispatch()\n   * 如果url没有改变，则不\"刷新\"\n   *\n   * @param {String} path\n   * @return this\n   */\n  setRoute(path) {\n    var loc = window.location;\n    var oldURI = loc.pathname + loc.search;\n    Listener.setHashHistory(path);\n    var newURI = loc.pathname + loc.search;\n    if (this.options.mode === 'history' && oldURI !== newURI) {\n      this.dispatch(newURI);\n    }\n    return this;\n  }\n\n  /**\n   * alias: `setRoute`\n   */\n  redirect(path) {\n    return this.setRoute(path);\n  }\n\n  /**\n   * TODO: once\n   * 和.on()方法类似，但只会触发一次\n   * @param {String|RegExp} path\n   * @param {Function|Array} handlers\n   * @return this\n   */\n  once(path, handlers) {\n    return this;\n  }\n\n  /**\n   * .off()方法表示不再侦听某个路由，直接将该路由节点的所有callbacks移除\n   * @return this\n   */\n  off(path) {\n    if (path !== '' && path[0] === '/') {\n      path = path.slice(1);\n    }\n    var n = findNode(this.routeTree, path);\n    if (n !== null && n.callbacks !== null) {\n      n.callbacks.splice(0, n.callbacks.length);\n    }\n    return this;\n  }\n\n  /**\n   * .reload()\n   * reload page: redispatch current path\n   * @method\n   * @return this\n   */\n  reload() {\n    if (this.options.mode === 'history') {\n      this.dispatch(location.pathname + location.search + location.hash);\n    } else {\n      this.dispatch(location.hash.slice(1));\n    }\n    return this;\n  }\n}\n"],"names":["RNode"],"mappings":"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"}