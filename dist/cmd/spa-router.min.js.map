{"version":3,"sources":["spa-router.js"],"names":["factory","define","require","exports","module","onchange","onChangeEvent","listeners","Listener","i","l","length","handler","url","mode","this","options","Loc","pathname","search","hash","substr","slice","redirect","root","newURL","replace","dispatch","charAt","findNode","tree","path","onlyFind","params","parts","split","target","found","parent","len","realCurrentValue","matcher","k","$1","$2","$3","j","_children","value","extendNode","RNode","children","createRouteTree","routes","isFunction","callbacks","isArray","hasOwn","call","fns","dfs","ci","ri","newParams","p","RegExp","matches","match","apply","searchRouteTree","Win","window","location","toString","Object","prototype","decodeC","decodeURIComponent","encodeC","encodeURIComponent","TYPE_UNDEFINED","hasOwnProperty","obj","extend","srcList","arguments","src","q","addEvent","name","addEventListener","attachEvent","queryHelper","parse","queryString","queryParts","query","key","val","undefined","push","stringify","keys","sort","len1","_parts","len2","join","TypeError","before","after","_parent","nprtt","concat","historySupport","history","init","add","fn","setHashHistory","pushState","document","title","currentURL","idf","indexOf","test","defaults","notFound","recurse","Router","routeTree","configure","rprtt","start","self","mount","on","handlers","n","uri","queryIndex","hashIndex","req","result","setRoute","loc","oldURI","newURI","once","off","splice","reload"],"mappings":"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","file":"spa-router.min.js","sourcesContent":["\n/// 浏览器兼容性：\n/// onhashchange: [IE 8.0]\n/// history.pushState: [IE 10.0]\n\n(function(factory) {\n  // CMD wrapper\n  define(function(require, exports, module) {\n    factory(exports);\n  });\n}(function(exports) {\n\n\nvar Win = window,\n  Loc = Win.location,\n  toString = Object.prototype.toString,\n  decodeC = Win.decodeURIComponent,\n  encodeC = Win.encodeURIComponent;\n\nvar TYPE_UNDEFINED = \"undefined\";\n\n/**\n * Shorthand: hasOwn\n * stand for hasOwnProperty\n */\nvar hasOwn = Object.prototype.hasOwnProperty,\n\n  /**\n   * Utils: isArray\n   * @param {Obejct} obj\n   * @return {Boolean}\n   */\n  isArray = function(obj) {\n    return toString.call(obj) === \"[object Array]\";\n  },\n\n  /**\n   * Utils: isFunction\n   * @param {Object} obj\n   * @return {Boolean}\n   */\n  isFunction = function(obj) {\n    return toString.call(obj) === \"[object Function]\";\n  },\n\n  /**\n   * Utils: extend\n   * @param {Object,...} src list\n   * @return {Object} a new object\n   */\n  extend = function() {\n    var obj = {};\n    var srcList = [].slice.call(arguments, 0);\n    for (var i = 0, len = srcList.length; i < len; ++i) {\n      var src = srcList[i];\n      for (var q in src) {\n        if (hasOwn.call(src, q)) {\n          obj[q] = src[q];\n        }\n      }\n    }\n    return obj;\n  },\n\n  addEvent = function(name, handler) {\n    if (Win.addEventListener) {\n      Win.addEventListener(name, handler, false);\n    } else if (Win.attachEvent) {\n      Win.attachEvent('on' + name, handler);\n    } else {\n      Win['on' + name] = handler;\n    }\n  };\n\nvar queryHelper = {\n  /**\n   * parse query string\n   * @param {String} queryString\n   * @erturn {Object} query object\n   */\n  parse: function(queryString) {\n    if (typeof queryString !== 'string') {\n      return {};\n    }\n\n    queryString = queryString.replace(/^\\s*|\\s*$/g, '').replace(/^(\\?|#)/, '');\n\n    if (!queryString) {\n      return {};\n    }\n\n    var queryParts = queryString.split('&');\n\n    var query = {};\n\n    for (var i = 0, len = queryParts.length; i < len; ++i) {\n      var parts = queryParts[i].replace(/\\+/g, ' ').split('='); // 特殊字符`+`转换为空格\n      var key = parts[0];\n      var val = parts[1];\n\n      key = decodeC(key);\n\n      val = val === undefined ? null : decodeC(val);\n\n      if (!hasOwn.call(query, key)) {\n        query[key] = val;\n      } else if (isArray(query[key])) {\n        query[key].push(val);\n      } else {\n        query[key] = [query[key], val];\n      }\n    }\n\n    return query;\n\n  },\n\n  /**\n   * stringify query object\n   * @param {Object} obj\n   * @return {String} query string\n   */\n  stringify: function(obj) {\n    if (!obj) {\n      return '';\n    }\n    var keys = [];\n    for (var p in obj) {\n      if (hasOwn.call(obj, p)) {\n        keys.push(p);\n      }\n    }\n\n    keys.sort();\n\n    var parts = [];\n    for (var i = 0, len1 = keys.length; i < len1; ++i) {\n      var key = keys[i];\n      var val = obj[key];\n\n      if (isArray(val)) {\n        val.sort();\n        var _parts = [];\n        for (var j = 0, len2 = val.length; j < len2; ++j) {\n          _parts.push(encodeC(key) + '=' + encodeC(val[j]));\n        }\n        parts.push(_parts.join('&'));\n        continue;\n      }\n      parts.push(encodeC(key) + '=' + encodeC(val));\n    }\n    return parts.join('&');\n  }\n\n};\n\n\n/**\n * RNode\n * @constructor\n * @param {String} value 必须\n *\n * value:     区分同级节点的唯一标识\n * params:    value包含的参数，使用{参数名:参数规则}键值对表示\n * before:    路由匹配时，url改变之前执行的回调函数或队列\n * callbacks: 路由匹配时执行的回调函数或队列\n * after:     路由匹配时，url改变之后，callbacks执行完再执行的回调函数或队列\n *\n * _children: 子节点引用列表\n * _parent:   父节点引用\n */\nvar RNode = function(value) {\n  if (typeof value === TYPE_UNDEFINED) throw new TypeError('The RNode Constructor Need A Value.');\n  this.value = value;\n  this.params = {};\n  this.callbacks = null;\n  this.before = null;\n  this.after = null;\n  this._children = [];\n  this._parent = null;\n};\n\nvar nprtt = RNode.prototype;\n\n/**\n * set/get children\n * @param {RNode|[RNode]} children **optional**\n * @return {[RNode]|RNode} return children node list or this\n */\nnprtt.children = function(children) {\n  if (typeof children === TYPE_UNDEFINED) {\n    return this._children;\n  }\n  if (children instanceof RNode) {\n    this._children.push(children);\n  } else if (isArray(children)) {\n    this._children = this.children.concat(children);\n  }\n  return this;\n};\n\n/**\n * set/get parent\n * @param {RNode} parent **optional**\n * @return {RNode} return parent node or this\n */\nnprtt.parent = function(parent) {\n  if (typeof parent === TYPE_UNDEFINED) {\n    return this._parent;\n  }\n  if (parent instanceof RNode) {\n    this._parent = parent;\n  }\n  return this;\n};\n\n\nvar historySupport = typeof Win.history['pushState'] !== TYPE_UNDEFINED;\n\n/// Listener\nvar Listener = {\n\n  listeners: null,\n\n  history: false,\n\n  init: function(mode) {\n    this.history = mode === 'history';\n    if (this.history && historySupport) { // IE 10+\n      addEvent('popstate', onchange);\n    } else {\n      addEvent('hashchange', onchange);\n    }\n    return this;\n  },\n\n  add: function (fn) {\n\n    if (!this.listeners) {\n      this.listeners = [];\n    }\n\n    this.listeners.push(fn);\n\n    return this;\n  },\n\n  setHashHistory: function (path) {\n    if (this.history) {\n      history.pushState({}, document.title, path);\n    } else {\n      if (path[0] === '/') {\n        Loc.hash = '!' + path;\n      } else {\n        var currentURL = Loc.hash.slice(2); // 去掉前面的#!\n        var idf = currentURL.indexOf('?');\n        if (idf !== -1) {\n          currentURL = currentURL.slice(0, idf);\n        }\n        if (/.*\\/$/.test(currentURL)) {\n          Loc.hash = '!' + currentURL + path;\n        } else {\n          var hash = currentURL.replace(/([^\\/]+|)$/, function($1) {\n            return $1 === '' ? '/' + path : path;\n          });\n          Loc.hash = '!' + hash;\n        }\n      }\n    }\n    return this;\n  }\n\n};\n\nfunction onchange(onChangeEvent) {\n  var listeners = Listener.listeners;\n  for (var i = 0, l = listeners.length; i < l; i++) {\n    listeners[i](onChangeEvent);\n  }\n}\n\n\nvar defaults = {\n  // mode可以是history|hashbang\n  // mode:history     使用HTML5 History API\n  // mode:hashbang    使用hash（hashbang模式）\n  root: '/', // TODO\n  mode: 'hashbang',\n  notFound: false,\n  recurse: false // TODO\n};\n\n/**\n * Router (routes)\n * @constructor\n * @param {Object} routes **Optional**\n */\nvar Router = exports.Router = function(routes) {\n  routes = routes || {};\n  if (!(this instanceof Router)) return new Router(routes);\n  var root = new RNode('');\n  root.params = false;\n  this.routeTree = createRouteTree(root, routes);\n  this.options = {};\n  this.configure(defaults);\n};\n\nvar rprtt = Router.prototype;\n\n/**\n * .configure()\n * @method\n * @param {Object} options **Optional**\n * @return this\n */\nrprtt.configure = function(options) {\n  options = options || {};\n  this.options = extend(this.options, options);\n  return this;\n};\n\n// TODO: root怎么处理？\nfunction handler(onChangeEvent) {\n  var mode = this.options.mode;\n  var url;\n  switch(mode) {\n    case 'history':\n      url = Loc.pathname + Loc.search + Loc.hash;\n      if (url.substr(0, 1) !== '/') {\n        url = '/' + url;\n      }\n      break;\n    case 'hashbang':\n    default:\n      var hash = Loc.hash.slice(1);\n      if (hash === '' || hash === '!') {\n        return this.redirect(this.options.root);\n      }\n      var newURL = onChangeEvent && onChangeEvent.newURL || Loc.hash;\n      url = newURL.replace(/.*#!/, '');\n  }\n  this.dispatch(url.charAt(0) === '/' ? url : '/' + url);\n};\n\n/**\n * .start()\n * @method\n * @param {Object} options\n * @return this\n */\nrprtt.start = function(options) {\n  options = options || {};\n  var self = this;\n\n  // 初始化配置\n  this.configure(options);\n\n  Listener.init(this.options.mode).add(function() {\n    return handler.call(self);\n  });\n\n  // 首次触发\n  handler.call(this);\n\n  return this;\n};\n\n/**\n * .mount() 将路由挂载到某个节点上\n * @method\n * @param {String} path\n * @param {Object} routes\n * @return this\n * */\nrprtt.mount = function(path, routes) {\n  if (path !== '' && path[0] === '/') {\n    path = path.slice(1);\n  }\n  createRouteTree(findNode(this.routeTree, path), routes);\n  return this;\n};\n\n/**\n * .on()\n * @method\n * @param {String|RegExp} path\n * @param {Function|Array} handlers\n * @return this\n */\nrprtt.on = function(path, handlers) {\n  if (path !== '' && path[0] === '/') {\n    path = path.slice(1);\n  }\n  var n = findNode(this.routeTree, path);\n  n.callbacks = n.callbacks || [];\n  if (isArray(handlers)) {\n    n.callbacks = n.callbacks.concat(handlers);\n  } else if (isFunction(handlers)) {\n    n.callbacks.push(handlers);\n  }\n  return this;\n};\n\n/**\n * 根据给定的path，查找路由树，返回path对应的节点。如果节点不存在就创建新的节点\n * 匹配参数（参数名由字母、数字、下划线组成，不能以数字开头。后面带括号的是特定参数的匹配规则。）\n * @param {RNode} tree\n * @param {String} path\n * @param {Boolean} onlyFind 只找节点，当节点不存在时不要创建新节点\n * @return {RNode}\n * */\nfunction findNode(tree, path, onlyFind) {\n  onlyFind = !!onlyFind;\n  var parts = path.split('/');\n  var target = null, found = false;\n  var parent = tree;\n  var params;\n  for (var i = 0, len = parts.length; i < len; ++i) {\n    params = false;\n    var realCurrentValue = parts[i];\n\n    var matcher = /:([a-zA-Z_][a-zA-Z0-9_]*)(\\([^\\)]+\\))?/g;\n\n    var k = 0;\n\n    /* jshint ignore:start */\n    realCurrentValue = realCurrentValue.replace(matcher, function($1, $2, $3) {\n      params = params || [];\n      params[k++] = $2;\n      if (typeof $3 === 'undefined') {\n        return '([a-zA-Z0-9_]+)';\n      } else {\n        return $3;\n      }\n    });\n    /* jshint ignore:end */\n\n    for (var j = 0; j < parent._children.length; ++j ) {\n      if (parent._children[j].value === realCurrentValue) {\n        target = parent._children[j];\n        found = true;\n        break;\n      }\n    }\n    if (!found) { // 不存在，创建新节点\n      if (onlyFind) return false;\n      var extendNode = new RNode(realCurrentValue);\n      parent.children(extendNode);\n      extendNode.parent(parent);\n      extendNode.params = params;\n      target = extendNode;\n    }\n    parent = target;\n    found = false;\n  }\n  return target;\n}\n\n/**\n * 构造路由树/子树\n * @param {RNode} root 当前根节点\n * @param {Object} routes 当前节点的路由表\n * @return {RNode} 返回根节点\n * */\nfunction createRouteTree(root, routes) {\n\n  if (isFunction(routes)) {\n    root.callbacks = [routes];\n    return root;\n  } else if (isArray(routes)) {\n    root.callbacks = routes;\n    return root;\n  }\n\n  for (var path in routes) {\n    if (hasOwn.call(routes, path)) {\n\n      var fns = routes[path];\n\n      if (path === '/') {\n        createRouteTree(root, fns);\n      } else {\n        if (path !== '' && path[0] === '/') {\n          path = path.slice(1);\n        }\n        createRouteTree(findNode(root, path), fns);\n      }\n\n    }\n  }\n\n  return root;\n}\n\n/**\n * @param {RNode} root 当前节点\n * @param {Array} parts 路径分段数组\n * @param {Integer} ci 当前路径分段索引\n * @param {Integer} ri 当前节点所在兄弟节点列表的位置\n * @params {Object} params 记录参数的对象\n * @return {[RNode, Object]} 同时返回节点和参数\n */\nfunction dfs(root, parts, ci, ri, params) {\n\n  var value = parts[ci];\n\n  var newParams = {};\n  for (var p in params) { // copy: params => newParams\n    if (hasOwn.call(params, p)) {\n      newParams[p] = params[p];\n    }\n  }\n\n  var parent = root.parent();\n\n  if (parent === null && ri > 0) { // finally not matched\n    return [false, newParams];\n  }\n\n  if (parent !== null && ri > parent._children.length-1) { // not matched, go back\n    return [false, newParams];\n  }\n\n  if (ci > parts.length-1 || ci < 0) return [false, newParams];\n\n  var matcher = new RegExp('^' + root.value + '$');\n  var matches = value.match(matcher);\n\n  if (matches === null) return [false, newParams]; // not matched, go back\n\n  if (!!root.params) {\n    matches = [].slice.apply(matches, [1]);\n    for (var k = 0; k < matches.length; ++k) {\n      newParams[root.params[k]] = matches[k];\n    }\n  }\n\n  if (ci === parts.length-1 && root.callbacks !== null) { // finally matched\n    return [root, newParams];\n  }\n\n  for (var i = 0; i < root._children.length; ++i) {\n    var found = dfs(root._children[i], parts, ci+1, i, newParams); // matched, go ahead\n    if (!found[0]) continue;\n    return found;\n  }\n\n  return dfs(root, parts, ci, ri+1, params); // not matched, go back\n\n}\n\n/**\n * 搜索路由树，看是否存在匹配的路径，如果存在，返回相应的回调函数\n * @todo 只返回第一个匹配到的路由（如果存在多个匹配？）\n * @param {RNode} tree 树根\n * @param {String} path 要匹配的路径\n * 返回值包含两个，用数组表示[callbacks, params]\n * @return {Function|Array|null} 如果存在就返回相应的回调，否则返回null\n * @return {[Array, Object]} 同时返回回调和参数\n *\n * */\nfunction searchRouteTree(tree, path) {\n\n  var found = dfs(tree, path.split('/'), 0, 0, {});\n\n  if (!found[0]) {\n    return [null, {}];\n  }\n\n  return [found[0].callbacks, found[1]];\n\n}\n\n/**\n * .dispatch() 根据给定的路径，遍历路由树，只要找到一个匹配的就把路由返回\n * @method\n * @param {String} path\n * @return this\n */\nrprtt.dispatch = function(path) {\n\n  var routeTree = this.routeTree;\n  // 保存原始请求uri\n  var uri = path;\n  // 取出query部分\n  var queryIndex = path.indexOf('?');\n  var hashIndex = path.indexOf('#');\n  hashIndex = hashIndex === -1 ? path.length : hashIndex;\n  var queryString = queryIndex === -1 ? '' : path.slice(queryIndex+1, hashIndex);\n  path = queryIndex === -1 ? path : path.slice(0, queryIndex);\n  var req = {uri: uri, path: path, query: queryHelper.parse(queryString)};\n\n  if (path === '/') {\n    path = '';\n  }\n  var result = searchRouteTree(routeTree, path);\n  var callbacks = result[0];\n  req.params = result[1];\n  if (callbacks !== null) {\n    if (isArray(callbacks)) {\n      for (var i = 0, len = callbacks.length; i < len; ++i) { // 不考虑异步操作\n        callbacks[i].call(this, req);\n      }\n    } else {\n      throw new TypeError('callbacks must be an array type');\n    }\n  } else if (this.options.notFound) {\n    this.options.notFound(req);\n  }\n\n  return this;\n\n};\n\n/**\n * 这个方法会改变当前的`url`，从而触发路由（和dispatch类似，但是dispatch不会改动`url`）\n * 这个方法对于hash/hashbang模式没有多大用处，用户可以通过点击<a>标签实现`url`改变而不跳转页面，但是在history模式下，用户无法通过标签改变`url`而不跳转页面\n * 改方法相当于调用一次history.pushState()然后再调用.dispatch()\n * 如果url没有改变，则不\"刷新\"\n *\n * @param {String} path\n * @return this\n */\nrprtt.setRoute = function(path) {\n  var loc = window.location;\n  var oldURI = loc.pathname + loc.search;\n  Listener.setHashHistory(path);\n  var newURI = loc.pathname + loc.search;\n  if (this.options.mode === 'history' && oldURI !== newURI) {\n    this.dispatch(newURI);\n  }\n  return this;\n};\n\n/**\n * alias: `setRoute`\n */\nrprtt.redirect = rprtt.setRoute;\n\n/**\n * TODO: once\n * 和.on()方法类似，但只会触发一次\n * @param {String|RegExp} path\n * @param {Function|Array} handlers\n * @return this\n */\nrprtt.once = function(path, handlers) {\n  return this;\n};\n\n/**\n * .off()方法表示不再侦听某个路由，直接将该路由节点的所有callbacks移除\n * @return this\n */\nrprtt.off = function(path) {\n  if (path !== '' && path[0] === '/') {\n    path = path.slice(1);\n  }\n  var n = findNode(this.routeTree, path);\n  if (n !== null && n.callbacks !== null) {\n    n.callbacks.splice(0, n.callbacks.length);\n  }\n  return this;\n};\n\n/**\n * .reload()\n * reload page: redispatch current path\n * @method\n * @return this\n */\nrprtt.reload = function() {\n  var loc = window.location;\n  if (this.options.mode === 'history') {\n    this.dispatch(loc.pathname + loc.search + loc.hash);\n  } else {\n    this.dispatch(loc.hash.slice(1));\n  }\n  return this;\n};\n\n\n}));\n"],"sourceRoot":"/source/"}